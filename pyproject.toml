[build-system]
requires = ["setuptools>=64"]
build-backend = "setuptools.build_meta"

[project]
name = "pedon"
dynamic = ["version"]
authors = [{ name = "Martin Vonk", email = "vonk.mart@gmail.com" }]
description = "Python package for (unsaturated) soil properties including pedotransfer functions"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.10"
dependencies = ["numpy", "matplotlib", "pandas", "scipy"]
classifiers = [
        'Programming Language :: Python :: 3 :: Only',
        'Programming Language :: Python :: 3.10',
        'Programming Language :: Python :: 3.11',
        'Programming Language :: Python :: 3.12',
        'Topic :: Scientific/Engineering :: Hydrology',
        'Intended Audience :: Science/Research',
        "License :: OSI Approved :: MIT License",
        "Operating System :: OS Independent",
]

[project.urls]
homepage = "https://github.com/martinvonk/pedon"
repository = "https://github.com/martinvonk/pedon"

[project.optional-dependencies]
linting = ["flake8", "ruff"]
formatting = ["black[jupyter]", "isort"]
typing = ["mypy", "pandas-stubs"]
pytesting = ["pytest>=7", "pytest-cov", "pytest-sugar"]
coveraging = ["coverage"]
dev = ["pedon[linting,formatting,typing,pytesting]", "tox"]

[tool.poetry]
name = "pedonenv"
version = "0.0.0"
description = "Development Virtual Environment"
authors = ["poetry"]

[tool.poetry.dependencies]
python = "^3.10"
numpy = "^1.3"
scipy = "^1.6"
pandas = "^2.0"
matplotlib = "^3.6"
openpyxl = "^3.0"
flake8 = "^6.1.0"
ruff = "^0.1.9"
black = { extras = ["jupyter"], version = "^23.12.1" }
isort = "^5.13.2"
mypy = "^1.8.0"
pandas-stubs = "^2.1.4.231218"
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pytest-sugar = "^0.9.7"
coverage = "^7.3.4"
tox = "^4.11.4"
setuptools = "^69.0.3"
ipykernel = "^6.28.0"
requests = "^2.31.0"

[tool.setuptools]
include-package-data = true

[tool.setuptools.dynamic]
version = { attr = "pedon._version.__version__" }

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"pedon.datasets" = ["*.csv"]

[tool.black]
line-length = 88

[tool.isort]
profile = "black"

[tool.mypy]
mypy_path = "src"

[tool.ruff]
line-length = 88
target-version = "py310"

[[tool.mypy.overrides]]
module = ['matplotlib.*', 'scipy.*']
ignore_missing_imports = true

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.tox]
legacy_tox_ini = """
    [tox]
    requires = tox>=4
    env_list = format, type, lint, py{310,311,312}

    [testenv]
    description = run unit tests
    extras = pytesting
    commands =
            pytest tests

    [testenv:format]
    description = run formatters
    basepython = python3.10
    extras = formatting
    commands =
            black src --check --verbose
            isort src --check

    [testenv:type]
    description = run type checks
    basepython = python3.10
    extras = typing
    commands =
            mypy src

    [testenv:lint]
    description = run linters
    basepython = python3.10
    extras = linting
    commands =
            flake8 src --max-line-length=88 --ignore=E741,W503
            ruff check src

"""
