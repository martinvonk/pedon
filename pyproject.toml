[tool.poetry]

name = "pedon"
version = "0.0.7"
description = "Python package for (unsaturated) soil properties including pedotransfer functions"
authors = ["martinvonk <vonk.mart@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://pypi.org/project/pedon/"
repository = "https://github.com/martinvonk/pedon"
classifiers = [
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Topic :: Scientific/Engineering :: Hydrology',
    'Intended Audience :: Science/Research',
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
include = [
    { path = "pedon/datasets/soilsamples.csv", format = [
        "sdist",
        "wheel",
    ] },
]

[tool.poetry.dependencies]
python = ">=3.10"
numpy = "*"
pandas = "*"
matplotlib = "*"
scipy = "*"

[tool.poetry.group.dev.dependencies]
tox = "^4.15.0"
ipykernel = "^6.29.4"

[tool.poetry.group.linting]
optional = true

[tool.poetry.group.linting.dependencies]
flake8 = "*"
ruff = "*"

[tool.poetry.group.formatting]
optional = true

[tool.poetry.group.formatting.dependencies]
black = { extras = ["jupyter"], version = "*" }
isort = "*"

[tool.poetry.group.typing]
optional = true

[tool.poetry.group.typing.dependencies]
mypy = "*"
pandas-stubs = "*"

[tool.poetry.group.pytesting]
optional = true

[tool.poetry.group.pytesting.dependencies]
pytest = ">=7"
pytest-cov = "*"
pytest-sugar = "*"

[tool.poetry.group.coveraging]
optional = true

[tool.poetry.group.coveraging.dependencies]
coverage = "*"

[tool.poetry-dynamic-versioning]
enable = true

[tool.poetry-dynamic-versioning.from-file]
source = "src/pedon/_version.py"
pattern = '__version__ = "(\d(\.\d)+)"'

[tool.black]
line-length = 88

[tool.isort]
profile = "black"

[tool.mypy]
mypy_path = "src"

[tool.ruff]
line-length = 88
target-version = "py310"

[[tool.mypy.overrides]]
module = ['matplotlib.*', 'scipy.*']
ignore_missing_imports = true

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.tox]
legacy_tox_ini = """
    [tox]
    requires = tox>=4
    env_list = format, type, lint, py{310,311,312}

    [testenv]
    description = run unit tests
    extras = pytesting
    commands =
            pytest tests

    [testenv:format]
    description = run formatters
    basepython = python3.10
    extras = formatting
    commands =
            black src --check --verbose
            isort src --check

    [testenv:type]
    description = run type checks
    basepython = python3.10
    extras = typing
    commands =
            mypy src

    [testenv:lint]
    description = run linters
    basepython = python3.10
    extras = linting
    commands =
            flake8 src --max-line-length=88 --ignore=E741,W503
            ruff check src

"""


[build-system]
requires = ["poetry-core", "poetry-dynamic-versioning>=1.3.0"]
build-backend = "poetry.core.masonry.api"
